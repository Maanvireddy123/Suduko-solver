def is_valid(board, row, col, num):
    # Check if the number is already in the current row
    for i in range(9):
        if board[row][i] == num:
            return False

    # Check if the number is already in the current column
    for i in range(9):
        if board[i][col] == num:
            return False

    # Check if the number is already in the current 3x3 grid
    start_row, start_col = 3 * (row // 3), 3 * (col // 3)
    for i in range(3):
        for j in range(3):
            if board[start_row + i][start_col + j] == num:
                return False

    return True


def find_empty_cell(board):
    # Find the next empty cell (cell with value 0)
    for i in range(9):
        for j in range(9):
            if board[i][j] == 0:
                return i, j
    return None, None  # If no empty cell is found, puzzle is solved


def solve_sudoku(board):
    row, col = find_empty_cell(board)

    # If no empty cell is found, the puzzle is solved
    if row is None or col is None:
        return True

    # Try all numbers from 1 to 9 for the empty cell
    for num in range(1, 10):
        if is_valid(board, row, col, num):
            board[row][col] = num

            # Recursively solve the remaining puzzle
            if solve_sudoku(board):
                return True

            # If the current configuration does not lead to a solution, backtrack
            board[row][col] = 0

    return False  # No solution exists for the current puzzle


if _name_ == "_main_":
    # Example Sudoku puzzle
    sudoku_board = [
        [5, 3, 0, 0, 7, 0, 0, 0, 0],
        [6, 0, 0, 1, 9, 5, 0, 0, 0],
        [0, 9, 8, 0, 0, 0, 0, 6, 0],
        [8, 0, 0, 0, 6, 0, 0, 0, 3],
        [4, 0, 0, 8, 0, 3, 0, 0, 1],
        [7, 0, 0, 0, 2, 0, 0, 0, 6],
        [0, 6, 0, 0, 0, 0, 2, 8, 0],
        [0, 0, 0, 4, 1, 9, 0, 0, 5],
        [0, 0, 0, 0, 8, 0, 0, 7, 9]
    ]

    if solve_sudoku(sudoku_board):
        # Print the solved Sudoku puzzle
        for row in sudoku_board:
            print(row)
    else:
        print("No solution exists for the given Sudoku puzzle.")